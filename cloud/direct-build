#!/usr/bin/env bash

# This script builds the frontend assets directly without relying on npm scripts
# It's a fallback for when npm scripts fail

set -e # Exit on error
set -x # Echo commands

echo "===== STARTING DIRECT BUILD ====="

# Setup Node.js environment
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
nvm use 20 || nvm install 20

# Display Node.js and npm versions
echo "Node.js version: $(node -v)"
echo "npm version: $(npm -v)"

# Make sure node_modules exists
if [ ! -d "node_modules" ]; then
  echo "Installing npm dependencies..."
  npm ci --no-audit
fi

# Ensure the correct Tailwind CSS Vite plugin is installed
echo "Making sure @tailwindcss/vite is installed..."
npm list @tailwindcss/vite || npm install --save @tailwindcss/vite@4.0.6

# Add node_modules/.bin to the PATH
export PATH="$PATH:$PWD/node_modules/.bin"

# Ensure vite is available
if ! command -v vite &> /dev/null; then
  echo "Vite not found, installing globally..."
  npm install -g vite
fi

# Check if vite.config.ts exists
if [ ! -f "vite.config.ts" ]; then
  echo "vite.config.ts not found!"
  php artisan vite:fix-manifest --force
  exit 0
fi

# Set environment variables for production build
export LARAVEL_CLOUD=true
export NODE_ENV=production

# Run vite build directly
echo "Building assets with Vite..."
if node_modules/.bin/vite build --mode production; then
  echo "Build completed successfully!"
else
  echo "Build failed, using Artisan fallback..."
  php artisan vite:fix-manifest --force
  exit 0
fi

# Verify the build
if [ -d "public/build" ]; then
  echo "Build directory exists!"
  ls -la public/build/

  if [ -f "public/build/manifest.json" ]; then
    echo "Manifest file exists!"
    cat public/build/manifest.json
  else
    echo "Manifest file not found, creating with Artisan command..."
    php artisan vite:fix-manifest --force
  fi

  # Set permissions
  chmod -R 775 public/build
else
  echo "Build directory doesn't exist after build!"
  echo "Creating emergency manifest with Artisan command..."
  php artisan vite:fix-manifest --force
fi

echo "===== DIRECT BUILD COMPLETED ====="
